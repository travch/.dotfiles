snippet cl "console.log"
	console.log(${0});

snippet fn "fat arrow function"
	(${1:param}) => {
		${0}
	};

snippet nfn "named fat arrow function"
	const ${1} = (${2}) => {
		${0}
	};

snippet if "if statement"
	if (${1}) {
		${0}
	}
#rxjs
snippet newO "new Observable"
	new Observable((observer) => {
		${0}
	}).pipe(${1});

snippet iTestScheduler "import TestScheduler"
	import { TestScheduler } from 'rxjs/testing';

	const assertDeepEqual = (actual, expected) => {
		expect(actual).toEqual(expected);
	};

	let testScheduler;
	beforeEach(() => {
		testScheduler = new TestScheduler(assertDeepEqual)
	});

snippet assertde "assert deep equal"
	const assertDeepEqual = (actual, expected) => {
		expect(actual).toEqual(expected);
	};

snippet rxjsTest "test scheduler block"
	testScheduler.run(({ hot, flush, expectObservable }) => {
		const action$ = hot('${1}', {
			${1}: ${2},
		});

		const output$ = ${3}(action$);

		expectObservable(output$).toBe('${4}', {
			${4}: ${5},
		});
		flush();
		${0}
		done();
	});

#jest
snippet testb "test block"
	test('${1}', (${2:done}) => {
		${0}
	});

snippet describeb "describe block"
	describe('${1}', () => {
		${0}
	});

snippet imockStore "import mock store"
	import configureStore from 'redux-mock-store';

	const mockStore = configureStore();

snippet newrxjstestfile "boiler plate for new test"
	import { TestScheduler } from 'rxjs/testing';

	const assertDeepEqual = (actual, expected) => {
		expect(actual).toEqual(expected);
	};

	describe('', () => {
		let testScheduler;
		beforeEach(() => {
			testScheduler = new TestScheduler(assertDeepEqual);	
		});

		test('', () => {

		});
	});

#react
snippet newMessage "new react-intl defineMessage obj"
	${0}: {
		defaultMessage: '${1}',
		description: '${2}',
	},
